#!/usr/bin/env swift

// ---
// morse swift script
// ---

// morse swift script
// The MIT License (MIT)
// Copyright (c) 2015 John Pavley

// ---
// TODO:
// ---


// - Add switch for help, version, verbose
// - Add sounds and voice!

import Foundation

// print a "bell" character
// println("\u{07}")

// ---
// shared constants
// ---

let count = Process.arguments.count
//println(count)

enum InputType: Int {
  case Morse = 1, English, Neither
}

let  args = Process.arguments[1..<count]
//println(args)

let englishChars = Set("ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789")
let morseChars = Set(".-/")

// ---
// shared vars
// ---

var morseDict: [Character: String] = ["A": ".-",
                                      "B": "-...",
                                      "C": "-.-.",
                                      "D": "-..",
                                      "E": ".",
                                      "F": "..-.",
                                      "G": "--.",
                                      "H": "....",
                                      "I": "..",
                                      "J": ".---",
                                      "K": "-.-",
                                      "L": ".-..",
                                      "M": "--",
                                      "N": "-.",
                                      "O": "---",
                                      "P": ".--.",
                                      "Q": "--.-",
                                      "R": ".-.",
                                      "S": "...",
                                      "T": "-",
                                      "U": "..-",
                                      "V": "...-",
                                      "W": ".--",
                                      "X": "-..-",
                                      "Y": "-.--",
                                      "Z": "--.-",
                                      "1": ".----",
                                      "2": "..---",
                                      "3": "...--",
                                      "4": "....-",
                                      "5": ".....",
                                      "6": "-....",
                                      "7": "--...",
                                      "8": "---..",
                                      "9": "----.",
                                      "0": "-----"]

var englishDict = [String: Character]()

// ---
// shared functions
// ---

func main() {
  createEnglishDict()
  if args.isEmpty {
    // if there are no args them output the morse dictionary
    let sortedDict = sorted(morseDict) {$0.0 < $1.0}
    for (letter, code) in sortedDict {
      println("\(letter) \(code)")
    }
  } else {
    switch parseInput() {
      case InputType.Morse:
        transToEnglish()

      case InputType.English:
        transToMorse()

      default:
        println("Can't understand input! A-Z and 0-9, or .-/ please")
      }
  }
}

func parseInput() -> InputType {
 var result = InputType.Neither
  
  // This function works because Sets in Swift
  // can only have unique elements

  let argsStr = join("", args)
  let normArgsStr = argsStr.uppercaseString
  let argsSet = Set(normArgsStr)
  
  //println("argeSet: \(argsSet)")
  //println("morseChars: \(morseChars)")
  //println("englishChars: \(englishChars)")

  if argsSet.isSubsetOf(morseChars) {
    result = InputType.Morse
  } else if argsSet.isSubsetOf(englishChars) {
    result = InputType.English
  }

  //println("result: \(result.rawValue)")
  return result
}

func createEnglishDict() {
  for (k, v) in morseDict {
    englishDict[v] = k
  }
}

func transToMorse() {
  for (index, argument) in enumerate(args) {
    // println("argument \(index): \(argument)")
    
    let normArgument = argument.uppercaseString
    for character in normArgument {
      if let mcode = morseDict[character] {
        print(mcode)
        print(" ") // space between morse letters
      }
    }
    if index + 1 < args.count {
      print("/ ") // slash between morse words
    }
  }
  print("\n")
}

func transToEnglish() {
  
  for (index, argument) in enumerate(args) {
    
    if let letter = englishDict[argument] {
      print(letter)
    } else {
      print(" ") // space between english words
    }
  }
  print("\n")
}

// ---
// main program
// ---

main()

